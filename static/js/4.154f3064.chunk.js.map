{"version":3,"sources":["components/common/FormControls/FormsControls.js","components/common/FormControls/FormsControls.module.css","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["FormControl","input","meta","touched","error","children","hasError","className","style","Textarea","props","restProps","child","Input","CreateField","validate","placeholder","name","component","text","module","exports","required","value","maxLengthCreator","maxLength","length","Post","item","alt","src","message","likeCounts","maxLength10","MyPostsForm","onSubmit","handleSubmit","Field","MyPosts","React","memo","postsElements","posts","map","p","PostReduxFrom","reduxForm","form","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","e","currentTarget","prevProps","prevState","this","profile__status","onDoubleClick","onChange","onBlur","autoFocus","Component","ProfileDataReduxForm","profile","type","Object","keys","contacts","key","Contact","contactTitle","contactValue","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","profile__contacts","ProfileInfo","savePhoto","saveProfile","useState","setEditMode","photos","large","userPhoto","avatar","target","files","formData","then","initialValues","Profile","ProfileContainer","userId","match","params","autorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","snapshot","updateStatus","compose","isFetching","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.154f3064.chunk.js","sourcesContent":["import style from \"./FormsControls.module.css\";\nimport { Field } from \"redux-form\";\n\nconst FormControl = ({ input, meta: {touched,error}, children }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? style.error : \"\"}>\n      <div>{ children}</div>\n\n      {hasError && <span>{error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const CreateField = (validate, placeholder, name, component, props={}, text=\"\") => {\n  return (\n    <div>\n      <Field\n        validate={validate}\n        placeholder={placeholder}\n        name={name}\n        component={component}\n        {...props}\n      /> {text}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2i_51\",\"login_error\":\"FormsControls_login_error__1k65A\"};","export const required = (value) => {\n  if (value) return undefined;\n  return \"field is required\";\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `max length is ${maxLength} symbols`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img alt=\"2\" src=\"https://helpx.adobe.com/content/dam/help/en/stock/how-to/visual-reverse-image-search/jcr_content/main-pars/image/visual-reverse-image-search-v2_intro.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likeCounts}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"text\"}\r\n          name={\"newPostText\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.message} message={p.message} likeCounts={p.likeCounts} />\r\n  ));\r\n\r\n  let addPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  const PostReduxFrom = reduxForm({\r\n    form: \"addNewPostForm\",\r\n  })(MyPostsForm);\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h2>My posts</h2>\r\n      <PostReduxFrom onSubmit={addPost} />\r\n      <div className={style.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../state/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nlet mapDispathToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispathToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\nimport style from \"./ProfileInfo.module.css\";\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n    });\n  };\n\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false,\n    });\n    this.props.updateUserStatus(this.state.status);\n  };\n\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className={style.profile__status}>\n        <b>Status: </b>\n        {!this.state.editMode && (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>\n              {this.props.status || \"--------\"}\n            </span>\n          </div>\n        )}\n        {this.state.editMode && (\n          <div>\n            <input\n              onChange={this.onStatusChange}\n              onBlur={this.deactivateEditMode}\n              value={this.state.status}\n              autoFocus={true}\n            ></input>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileStatus;\n","import { reduxForm } from \"redux-form\";\nimport {\n  CreateField,\n  Input,\n  Textarea,\n} from \"../../common/FormControls/FormsControls\";\n\nconst ProfileDataForm = ({ profile, handleSubmit,error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>save</button>\n      </div>\n      {error && <div>\n         {error} \n          </div>}\n      <div>\n        <b>Full name:</b> {CreateField(null, \"Full name\", \"fullName\", Input)}\n      </div>\n      <div>\n        <b>About me:</b> {CreateField([], \"About me\", \"aboutMe\", Textarea)}\n      </div>\n      <div>\n        <b>Looking for a job:</b>\n        {CreateField([], \"\", \"lookingForAJob\", Input, { type: \"checkbox\" })}\n      </div>\n      <div>\n        <b>My professional skills</b>:\n        {CreateField(\n          [],\n          \"My proffesion skills\",\n          \"lookingForAJobDescription\",\n          Textarea\n        )}\n      </div>\n      <div>\n        <b>Contacts:</b>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} >\n              <b>{key}</b>: {CreateField([],key,\"contacts.\"+key,Input)}\n            </div>\n          );\n        })}\n      </div>\n  \n    </form>\n  );\n};\nlet ProfileDataReduxForm = reduxForm({ form: \"editProfile\" })(ProfileDataForm);\nexport default ProfileDataReduxForm;\n","import style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"./../../common/Preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n//import ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/user.png\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\nconst ProfileInfo = ({\r\n  savePhoto,\r\n  profile,\r\n  status,\r\n  updateUserStatus,\r\n  isOwner,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    debugger;\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit =  (formData) => {\r\n    saveProfile(formData).then(\r\n      ()=>{\r\n        setEditMode(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img\r\n          alt=\"1\"\r\n          src=\"https://media.istockphoto.com/photos/child-hands-formig-heart-shape-picture-id951945718?k=6&m=951945718&s=612x612&w=0&h=ih-N7RytxrTfhDyvyTQCA5q5xKoJToKSYgdsJ_mHrv0=\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <img\r\n          alt=\"1\"\r\n          src={profile.photos.large || userPhoto}\r\n          className={style.avatar}\r\n        />\r\n      </div>\r\n      {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}></input>}\r\n      <ProfileStatus status={status} updateUserStatus={updateUserStatus} />\r\n      {editMode ? (\r\n        <ProfileDataReduxForm\r\n          profile={profile}\r\n          onSubmit={onSubmit}\r\n          initialValues={profile}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          goToEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n          isOwner={isOwner}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={style.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div className={style.profile}>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <b>Full name:</b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        {profile.lookingForAJob ? (\r\n          <div>\r\n            <b>I am looking for a job! </b>\"{profile.lookingForAJobDescription}\"\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <b>I am don't looking for a job!</b>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={style.profile__contacts}>\r\n        <b>Contacts:</b>\r\n\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className=\"\">\r\n      <ProfileInfo\r\n        updateUserStatus={props.updateUserStatus}\r\n        status={props.status}\r\n        profile={props.profile}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../state/profileReducer\";\r\nimport Profile from \"./Profile\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Profile\r\n            updateUserStatus={this.props.updateStatus}\r\n            status={this.props.status}\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            isOwner={!this.props.match.params.userId}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}