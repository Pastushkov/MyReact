{"version":3,"sources":["components/common/FormControls/FormsControls.js","components/common/FormControls/FormsControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/MessageItem.js","components/Dialogs/Dialogs.js","hoc/widthAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["FormControl","input","meta","touched","error","children","hasError","className","style","Textarea","props","restProps","child","Input","CreateField","validate","placeholder","name","component","text","module","exports","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialog","to","activeClassName","activeDialog","MessageItem","message","Dialogs","dialogElements","dialogsPage","dialogs","map","messagesElements","messages","maxLenght50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","dialogs_items","values","addMessage","newMessageText","mapStateToProps","state","isAuth","auth","compose","connect","dispatch","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.23338f18.chunk.js","sourcesContent":["import style from \"./FormsControls.module.css\";\nimport { Field } from \"redux-form\";\n\nconst FormControl = ({ input, meta: {touched,error}, children }) => {\n  const hasError = touched && error;\n  return (\n    <div className={hasError ? style.error : \"\"}>\n      <div>{ children}</div>\n\n      {hasError && <span>{error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const CreateField = (validate, placeholder, name, component, props={}, text=\"\") => {\n  return (\n    <div>\n      <Field\n        validate={validate}\n        placeholder={placeholder}\n        name={name}\n        component={component}\n        {...props}\n      /> {text}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__2i_51\",\"login_error\":\"FormsControls_login_error__1k65A\"};","export const required = (value) => {\n  if (value) return undefined;\n  return \"field is required\";\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `max length is ${maxLength} symbols`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs_items\":\"Dialogs_dialogs_items__16PrC\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"activeDialog\":\"Dialogs_activeDialog__3obRw\",\"messages\":\"Dialogs_messages__1w_Up\",\"active\":\"Dialogs_active__2sQhs\",\"message\":\"Dialogs_message__1xIDh\"};","import style from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={style.dialog}>\n      <NavLink to={path} activeClassName={style.activeDialog}> {props.name} </NavLink>\n    </div>\n  );\n};\nexport default DialogItem;\n","import style from \"./../Dialogs.module.css\";\n\nconst MessageItem = (props) => {\n  return <div className={style.message}>{props.message}</div>;\n};\n\nexport default MessageItem;","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogElements = props.dialogsPage.dialogs.map((dialog) => (\r\n    <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = props.dialogsPage.messages.map((message) => (\r\n    <MessageItem key={message.id} message={message.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageText);\r\n  };\r\n\r\n  const maxLenght50 = maxLengthCreator(50);\r\n\r\n  const AddMessageForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newMessageText\"}\r\n          placeholder={\"Enter new message\"}\r\n          validate={[required,maxLenght50]}\r\n        />\r\n        <button>Send</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\",\r\n  })(AddMessageForm);\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogs_items}>{dialogElements}</div>\r\n      <div className={style.messages}>{messagesElements}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const widthAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n","import { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../state/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { widthAuthRedirect } from \"../../hoc/widthAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessage(newMessageText));\r\n    },\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  widthAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}